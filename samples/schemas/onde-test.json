{
    "description": "Onde test schema",
    "type": "object",
    "properties": {
        "bareTypes": {
            "type": "object",
            "description": "The type of each property is defined as plain string.",
            "properties": {
                "string": "string",
                "number": "number",
                "integer": "integer",
                "boolean": "boolean",
                "array": "array",
                "object": "object"
            }
        },
        "stringTests": {
            "type": "object",
            "description": "Test set for string property.",
            "properties": {
                "string_001": "string",
                "string_002": { "type": "string" },
                "string_003": {
                    "type": "string",
                    "description": "Now with description."
                },
                "string_004": {
                    "type": "string",
                    "description": "This property has default value.",
                    "default": "Default value of a string property."
                },
                "string_005": {
                    "type": "string",
                    "description": "A required property (the value must not be empty).",
                    "required": true
                }
            }
        },
        "numberTests": {
            "type": "object",
            "properties": {
                "number_001": "number",
                "number_002": { "type": "number" },
                "number_003": {
                    "type": "number",
                    "default": 42
                }
            }
        },
        "errorTests": {
            "type": "object",
            "description": "A set of test with errors.",
            "properties": {
                "null": null,
                "emptyString": "",
                "emptyObject": {}
            }
        },
        "string": {
            "type": "string"
        },
        "multiline": {
            "type": "string",
            "format": "multiline"
        },
        "number": {
            "type": "number"
        },
        "integer": {
            "type": "integer"
        },
        "boolean": {
            "type": "boolean"
        },
        "arrayOfString": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "arrayOfBareItems": {
            "type": "array",
            "items": "number"
        },
        "arrayOfAny": {
            "type": "array"
        },
        "arrayOfSpecifiedTypes": {
            "type": "array",
            "items": [
                { "type": "string" }, 
                { "type": "number" },
                "boolean",
                { "type": "object", "additionalProperties": true },
                { "type": "array" }
            ]
        },
        "arrayOfSpecifiedBareTypes": {
            "type": "array",
            "items": [ "string", "number" ]
        },
        "objectOfAny": {
            "type": "object",
            "additionalProperties": true,
            "properties": {}
        },
        "objectOfSpecifiedAdditionalPropertyTypes": {
            "type": "object",
            "additionalProperties": ["number", "string"]
        },
        "union": {
            "type": ["string", "number"]
        },
        "bareUnion": ["string", "number"],
        "anyType": {
        },
        "arrays": {
            "type": "object",
            "properties": {
                "noItems": {
                    "type": "array",
                    "description": "User must be able use any type for the value of the items."
                },
                "bareItems": {
                    "type": "array",
                    "description": "User can only use the specified type (in this case, it's string) for the value of the items.",
                    "items": "string"
                },
                "schemaItems": {
                    "type": "array",
                    "description": "User can only use the specified type (in this case, it's number) for the value of the items. The schema may specify additional properties of the type.",
                    "items": { "type": "number", "default": 10 }
                },
                "arrayItems": {
                    "type": "array",
                    "items": [ "number", "string" ]
                },
                "mixedItems": {
                    "type": "array",
                    "items": [ "string", { "type": "array", "items": "string" }, { "type": "number" }, { "type": "boolean", "default": true } ]
                }
            }
        }
    }
}
